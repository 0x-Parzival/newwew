./build-combined-iso.sh:        if ! command -v "$dep" &>/dev/null; then
./build-kalki.sh:        if ! command -v "$dep" &>/dev/null; then
./build-kalki.sh:        if ! command -v "ollama" &>/dev/null; then
./build-kalki.sh:        if ! command -v "python3" &>/dev/null; then
./build-kalki.sh:        if ! command -v "jq" &>/dev/null; then
./build-kalki-ultimate.sh:        if ! command -v "$dep" &>/dev/null; then
./validate-phase5.sh:    if ! command -v "$1" &> /dev/null; then
./validate-phase6.sh:if command -v xdg-desktop-menu >/dev/null 2>&1; then
./scripts/release-kalki.sh:        if ! command -v "$dep" &> /dev/null; then
./scripts/cloudvm-novnc-setup.sh:if $SUDO which ufw &>/dev/null; then
./scripts/pre-build-setup.sh:    if ! command -v $cmd &> /dev/null; then
./scripts/first-boot-wizard.sh:if command -v zenity &>/dev/null; then
./scripts/first-boot-wizard.sh:  if command -v zenity &>/dev/null; then
./scripts/first-boot-wizard.sh:if command -v zenity &>/dev/null; then
./iso-profile/kalki-base/airootfs/root/cleanup-system.sh:pacman -Rns $(pacman -Qtdq) 2>/dev/null || true
./iso-profile/kalki-base/airootfs/root/customize_airootfs.sh:    if ! command -v reflector >/dev/null; then
./iso-profile/kalki-base/airootfs/root/customize_airootfs.sh:    if ! command -v plymouth &>/dev/null; then
./iso-profile/kalki-base/airootfs/root/customize_airootfs.sh:        if command -v update-grub &>/dev/null; then
./iso-profile/kalki-base/airootfs/root/customize_airootfs.sh:        elif command -v grub-mkconfig &>/dev/null; then
./iso-profile/kalki-base/airootfs/opt/kalki/ai-core/setup-ollama.sh:if ! command -v ollama >/dev/null 2>&1; then
./iso-profile/kalki-base/work/x86_64/airootfs/etc/X11/xinit/xinitrc.d/50-systemd-user.sh:if command -v dbus-update-activation-environment >/dev/null 2>&1; then
./kalki-os/build-minimal-iso.sh:    if command -v realpath >/dev/null 2>&1; then
./kalki-os/build-minimal-iso.sh:    elif command -v readlink >/dev/null 2>&1; then
./kalki-os/build-combined-iso.sh:    if command -v realpath >/dev/null 2>&1; then
./kalki-os/build-combined-iso.sh:    elif command -v readlink >/dev/null 2>&1; then
./kalki-os/build-combined-iso.sh:        if ! command -v "$dep" &>/dev/null; then
./kalki-os/build-kalki.sh:    if command -v realpath >/dev/null 2>&1; then
./kalki-os/build-kalki.sh:    elif command -v readlink >/dev/null 2>&1; then
./kalki-os/build-kalki.sh:        if ! command -v "$dep" &>/dev/null; then
./kalki-os/build-kalki.sh:        if ! command -v "ollama" &>/dev/null; then
./kalki-os/build-kalki.sh:        if ! command -v "python3" &>/dev/null; then
./kalki-os/build-kalki.sh:        if ! command -v "jq" &>/dev/null; then
./kalki-os/optimize-iso.sh:pacman -Rns $(pacman -Qtdq) 2>/dev/null || true
./kalki-os/build-kalki-ultimate.sh:        if ! command -v "$dep" &>/dev/null; then
./kalki-os/validate-phase5.sh:    if ! command -v "$1" &> /dev/null; then
./kalki-os/setup-plymouth.sh:if command -v plymouth-set-default-theme &> /dev/null; then
./kalki-os/setup-plymouth.sh:if command -v grub-mkconfig &> /dev/null && [ -f /etc/default/grub ]; then
./kalki-os/setup-plymouth.sh:if command -v bootctl &> /dev/null && [ -d /efi/loader ]; then
./kalki-os/ai-tools/start-ai-setup.sh:    log "This will download AI models which may require significant disk space."
./kalki-os/test-kalki-vm.sh:  if command -v realpath >/dev/null 2>&1; then
./kalki-os/test-kalki-vm.sh:  elif command -v readlink >/dev/null 2>&1; then
./kalki-os/test-kalki-vm.sh:  if ! pacman -Qi "$pkg" &> /dev/null; then
./kalki-os/pre-build-setup.sh:    if ! command -v $cmd &> /dev/null; then
./kalki-os/validate-phase6.sh:if command -v xdg-desktop-menu >/dev/null 2>&1; then
./kalki-os/verify-boot-config.sh:        check_file_exists "$ISO_PROFILE/syslinux/whichsys.c32" "SYSLINUX whichsys.c32"
./kalki-os/scripts/generate-vm-xml.sh:  if ! command -v virsh >/dev/null 2>&1; then
./kalki-os/validate-ai-integration.sh:    if ! command -v python3 &> /dev/null; then
./kalki-os/kalki-os-builder.sh:        if ! command -v "$dep" &> /dev/null; then
./src/ai-system/omnet-shell/omnet-root-agent.sh:  if command -v btrfs &>/dev/null && mount | grep -q btrfs; then
./src/ai-system/omnet-shell/omnet-root-agent.sh:    if command -v btrfs &>/dev/null && mount | grep -q btrfs; then
