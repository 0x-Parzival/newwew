#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Default size in GB
DEFAULT_SIZE=4

# Check if running as root
check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo -e "${RED}This script must be run as root${NC}"
        exit 1
    fi
}

# Display usage information
show_help() {
    echo "Usage: $0 [options]"
    echo "Manage cowspace in live environment"
    echo ""
    echo "Options:"
    echo "  -s, --size SIZE    Set cowspace size in GB (default: $DEFAULT_SIZE)G"
    echo "  -h, --help         Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0 -s 4           # Set cowspace to 4GB"
    echo "  $0 --size 6       # Set cowspace to 6GB"
}

# Parse command line arguments
parse_args() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            -s|--size)
                [[ $2 =~ ^[0-9]+$ ]] || {
                    echo -e "${RED}Error: Size must be a number${NC}"
                    show_help
                    exit 1
                }
                SIZE="$2"
                shift 2
                ;;
            -h|--help)
                show_help
                exit 0
                ;;
            *)
                echo -e "${RED}Unknown option: $1${NC}"
                show_help
                exit 1
                ;;
        esac
    done
}

# Check if running in live environment
check_live_environment() {
    if ! mount | grep -q '/run/archiso/airootfs'; then
        echo -e "${YELLOW}Warning: This doesn't appear to be a live environment.${NC}"
        read -p "Continue anyway? [y/N] " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
}

# Check current cowspace status
check_status() {
    echo -e "${YELLOW}=== Current Cowspace Status ===${NC}"
    
    # Check if cowspace is mounted
    if ! mount | grep -q '/run/archiso/cowspace'; then
        echo -e "${RED}Cowspace is not mounted!${NC}"
        return 1
    fi
    
    # Show current size
    local current_size=$(df -h /run/archiso/cowspace | awk 'NR==2 {print $2}')
    local used=$(df -h /run/archiso/cowspace | awk 'NR==2 {print $3}')
    local avail=$(df -h /run/archiso/cowspace | awk 'NR==2 {print $4}')
    local use_percent=$(df -h /run/archiso/cowspace | awk 'NR==2 {print $5}')
    
    echo -e "Mount Point: ${GREEN}/run/archiso/cowspace${NC}"
    echo -e "Total Size:  ${GREEN}$current_size${NC}"
    echo -e "Used:        ${YELLOW}$used${NC}"
    echo -e "Available:   ${GREEN}$avail${NC}"
    echo -e "Use%:        ${YELLOW}$use_percent${NC}"
    
    # Check if cowspace is on tmpfs
    if mount | grep -q 'tmpfs on /run/archiso/cowspace'; then
        echo -e "Type:        ${GREEN}tmpfs (in-memory)${NC}"
    else
        echo -e "Type:        ${YELLOW}persistent${NC}"
    fi
}

# Resize cowspace
resize_cowspace() {
    local size=${1:-$DEFAULT_SIZE}
    
    echo -e "${YELLOW}Resizing cowspace to ${size}G...${NC}"
    
    # Check if cowspace is mounted
    if ! mount | grep -q '/run/archiso/cowspace'; then
        echo -e "${RED}Error: Cowspace is not mounted!${NC}"
        return 1
    fi
    
    # Try to remount with new size
    if mount -o remount,size=${size}G /run/archiso/cowspace; then
        echo -e "${GREEN}Successfully resized cowspace to ${size}G${NC}"
        check_status
    else
        echo -e "${RED}Failed to resize cowspace${NC}"
        echo -e "${YELLOW}Trying alternative method...${NC}"
        
        # Alternative method: unmount and remount
        umount /run/archiso/cowspace 2>/dev/null
        mount -t tmpfs -o size=${size}G cowspace /run/archiso/cowspace
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}Successfully remounted cowspace with ${size}G${NC}"
            check_status
        else
            echo -e "${RED}Failed to remount cowspace${NC}"
            return 1
        fi
    fi
}

# Main function
main() {
    check_root
    check_live_environment
    parse_args "$@"
    
    if [ -n "$SIZE" ]; then
        resize_cowspace "$SIZE"
    else
        check_status
        echo -e "\n${YELLOW}To resize, run: $0 -s SIZE_IN_GB${NC}"
        echo -e "Example: $0 -s 4${NC}"
    fi
}

# Run main function
main "$@"
